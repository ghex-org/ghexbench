<?xml version="1.0" encoding="UTF-8"?>
<jube>
    <benchmark name="exchange" outpath="@OUTPUT_DIR@">

        <parameterset name="system" init_with="@GHEXBENCH_DIR@/utils/slurm/execute.xml:jobsystem_params">
            <parameter name="system">betzy</parameter>
            <parameter name="subsystem">compute</parameter>
            <parameter name="jobsystem">slurm</parameter>
            <parameter name="jobsystem_jobfile">slurm_job</parameter>
            <parameter name="system_jobfile">betzy_job</parameter>
            <parameter name="jobfile">job</parameter>       
            <parameter name="queue">normal</parameter>
            <parameter name="account">nn9263k</parameter>
            <parameter name="mpi_tag" tag="ompi">ompi</parameter>
            <parameter name="mpi_tag" tag="impi">impi</parameter>
            <parameter name="rundir">${jube_benchmark_rundir}/${jube_wp_padid}_${jube_step_name}/work</parameter>
        </parameterset>

        <parameterset name="mpi_params_ompi">
	  <parameter name="ucx_tls" tag="27_nodes">ud,dc</parameter>
	  <parameter name="ucx_tls" tag="single_node"></parameter>
          <parameter name="run_cmd" tag="halfcores" separator="">time mpirun -x UCX_RNDV_THRESH=262144 -x UCX_ZCOPY_THRESH=262144 -x UCX_WARN_UNUSED_ENV_VARS=n -x UCX_TLS=${ucx_tls},sm,self -map-by ppr:32:socket:pe=2 -bind-to core</parameter>
          <parameter name="run_cmd" tag="allcores"  separator="">time mpirun -x UCX_RNDV_THRESH=262144 -x UCX_ZCOPY_THRESH=262144 -x UCX_WARN_UNUSED_ENV_VARS=n -x UCX_TLS=${ucx_tls},sm,self -map-by ppr:64:socket:pe=1 -bind-to core</parameter>
          <parameter name="run_setup" separator="">
ml load xpmem/master
ml load openmpi/4.1.1
	  </parameter>
        </parameterset>

        <parameterset name="mpi_params_impi">
	    <parameter name="ucx_tls">all</parameter>
            <parameter name="run_cmd" tag="impi">time mpirun -np $tasks </parameter>
            <parameter name="run_setup" tag="halfcores" separator="">
ml load intel/2020b
ml load xpmem/master
ml load ucx/1.11.1
export I_MPI_DEBUG=1
# export I_MPI_FABRICS=shm:ofi
export UCX_WARN_UNUSED_ENV_VARS=n
export UCX_TLS=${ucx_tls}
export I_MPI_PIN_PROCESSOR_LIST=`seq -s, 0 2 127`
            </parameter>
            <parameter name="run_setup" tag="allcores" separator="">
ml load intel/2020b
ml load xpmem/master
ml load ucx/1.11.1
export I_MPI_DEBUG=1
# export I_MPI_FABRICS=shm:ofi
export UCX_WARN_UNUSED_ENV_VARS=n
export UCX_TLS=${ucx_tls}
export I_MPI_PIN_PROCESSOR_LIST=`seq -s, 0 1 127`
            </parameter>
        </parameterset>

        <parameterset name="variants">
            <parameter name="executable" tag="ompi">@EXECUTABLES@</parameter>
            <parameter name="executable" tag="impi">@EXECUTABLES@</parameter>
            <parameter name="executable" tag="impi+27_nodes">benchmark_mpi_comm</parameter>
        </parameterset>

        <parameterset name="jobspecs">
            <parameter name="taskspernode" type="int"  tag="halfcores">64</parameter>
            <parameter name="taskspernode" type="int"  tag="allcores">128</parameter>
            <parameter name="submit_cmd_args" tag="single_node">--qos=devel</parameter>
            <parameter name="submit_cmd_args" tag="27_nodes"></parameter>

	    <parameter name="nodex" type="int" tag="single_node">1</parameter>
	    <parameter name="nodey" type="int" tag="single_node">1</parameter>
	    <parameter name="nodez" type="int" tag="single_node">1</parameter>
	    <parameter name="nodex" type="int" tag="27_nodes">3</parameter>
	    <parameter name="nodey" type="int" tag="27_nodes">3</parameter>
	    <parameter name="nodez" type="int" tag="27_nodes">3</parameter>

            <parameter name="node_decomp">--node $nodex $nodey $nodez</parameter>
            <parameter name="nodes" type="int" mode="python">int($nodex*$nodey*$nodez)</parameter>

            <parameter name="taskspersocket" type="int" mode="python">int($taskspernode/2)</parameter>
            <parameter name="cpuspertask" type="int">1</parameter>
            <parameter name="taskspercore" type="int">1</parameter>
            <parameter name="tasks" type="int" mode="python">int($nodes*$taskspernode)</parameter>
            <parameter name="timelimit" type="string">01:00:00</parameter>
            <parameter name="L" type="int">64</parameter>

            <parameter name="halo" tag="mpicart" type="int">1,2,4,5</parameter>
            <parameter name="fields" tag="mpicart" type="int">1,2,4,8</parameter>

            <parameter name="halo" tag="hwcart+allcores" type="int">1,5</parameter>
            <parameter name="fields" tag="hwcart+allcores" type="int">1,8</parameter>

            <parameter name="halo" tag="hwcart+halfcores" type="int">1,2,4,5</parameter>
            <parameter name="fields" tag="hwcart+halfcores" type="int">1,2,4,8</parameter>

            <parameter name="num_reps" type="int">1000</parameter>
            <parameter name="order" type="string">ZYX</parameter>
        </parameterset>

        <parameterset name="domain_decomp1">
          <parameter name="ddecomp" tag="halfcores">${node_decomp} --socket 1 1 2 --numa 1 2 2 --l3 2 2 1 --core 2 1 1</parameter>
          <parameter name="ddecomp" tag="allcores" >${node_decomp} --socket 1 1 2 --numa 1 2 2 --l3 2 2 1 --core 4 1 1</parameter>
        </parameterset>

        <parameterset name="domain_decomp2">
          <parameter name="ddecomp" tag="halfcores">${node_decomp} --socket 1 2 1 --numa 1 1 4 --l3 1 4 1 --core 2 1 1</parameter>
          <parameter name="ddecomp" tag="allcores" >${node_decomp} --socket 1 2 1 --numa 1 1 4 --l3 1 4 1 --core 4 1 1</parameter>
        </parameterset>

        <parameterset name="domain_decomp3">
	  <parameter name="gdimx" type="int" tag="halfcores" mode="python">int($nodex*4)</parameter>
	  <parameter name="gdimx" type="int" tag="allcores" mode="python">int($nodex*8)</parameter>
	  <parameter name="gdimy" type="int" mode="python">int($nodey*4)</parameter>
	  <parameter name="gdimz" type="int" mode="python">int($nodez*4)</parameter>
          <parameter name="ddecomp">--MPICart $gdimx $gdimy $gdimz</parameter>
        </parameterset>

        <parameterset name="executable_args_set">
            <parameter name="exe_name" tag="ompi">$executable</parameter>
            <parameter name="exe_name" tag="impi">${executable}_intel</parameter>
            <parameter name="ddindex"  tag="hwcart">1</parameter>
            <parameter name="ddindex"  tag="mpicart">3</parameter>
            <parameter name="executable_args"> --domain ${L} ${L} ${L} --nrep ${num_reps} --nfields ${fields} --halo ${halo} --check --order ${order}</parameter>
        </parameterset>

        <fileset name="copy_jobfiles">
            <copy>@GHEXBENCH_DIR@/utils/${jobsystem}/flag.in</copy>
            <copy>@GHEXBENCH_SUBSYSTEM_DIR@/${jobsystem}/${jobfile}.in</copy>
        </fileset>

        <fileset name="copy_exe">
            <copy>@BINARY_DIR@/${exe_name}</copy>
        </fileset>

        <substituteset name="sub_flag" init_with="@GHEXBENCH_DIR@/utils/slurm/substitute.xml:slurm_sub">
            <iofile in="flag.in" out="flag" />
        </substituteset>

        <substituteset name="sub_job" init_with="@GHEXBENCH_DIR@/utils/slurm/substitute.xml:slurm_sub">
            <iofile in="${jobfile}.in" out="$jobfile" />
        </substituteset>

        <step name="run" shared="shared_dir" work_dir="@WORK_DIR@/bench_${jube_benchmark_id}_${jube_wp_id}">
            <use>system</use>
            <use>mpi_params_${mpi_tag}</use>
            <use>copy_jobfiles</use>
            <use>copy_exe</use>
            <use>sub_flag</use>
            <use>sub_job</use>
            <use>variants</use>
            <use>jobspecs</use>
            <use>executable_args_set</use>
            <use>domain_decomp$ddindex</use>

            <do>cp ${jobfile} "${jube_benchmark_rundir}/run_shared_dir"</do>
            <do>echo cd $jube_wp_abspath >> "${jube_benchmark_rundir}/run_shared_dir/runs.sh" </do>
            <do>echo "echo ./$exe_name $executable_args $ddecomp" >> "${jube_benchmark_rundir}/run_shared_dir/runs.sh" </do>
            <do>echo "$run_cmd $run_cmd_args ./$exe_name $executable_args $ddecomp >$outlogfile 2>$errlogfile" >> "${jube_benchmark_rundir}/run_shared_dir/runs.sh" </do>
            <do>echo ". flag" >> "${jube_benchmark_rundir}/run_shared_dir/runs.sh"</do>
            <do>echo "" >> "${jube_benchmark_rundir}/run_shared_dir/runs.sh"</do>
            <!--do shared="true">${submit_cmd} ${submit_cmd_args} ${jobfile}</do-->
            <do done_file="$done_file"></do>
            <do>cp ${outlogfile} "${jube_benchmark_rundir}/${jube_wp_padid}_${jube_step_name}/work"</do>
            <do>cp ${errlogfile} "${jube_benchmark_rundir}/${jube_wp_padid}_${jube_step_name}/work"</do>
            <do>cp ${exe_name} "${jube_benchmark_rundir}/${jube_wp_padid}_${jube_step_name}/work"</do>
        </step>

        <analyser name="analyse">
            <use from="@GHEXBENCH_DIR@/utils/analyse.xml">pattern</use>
            <analyse step="run">
                <file>$outlogfile</file>
            </analyse>
        </analyser>

        <result>
            <use>analyse</use>
            <table name="result" style="pretty" sort="executable,L,halo,fields,ucx_tls">
                <column>executable</column>
                <column>L</column>
                <column>halo</column>
                <column>fields</column>
                <column>ucx_tls</column>
                <column>t_mean</column>
                <column>t_median</column>
                <column>t_min</column>
                <column>t_max</column>
                <column>tp_median</column>
                <column>rundir</column>
            </table>
        </result>

    </benchmark>
</jube>
